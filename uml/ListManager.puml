@startuml
'https://plantuml.com/class-diagram

class ToDoListApp{
    + main()
    + start()
}

class ToDoListController{
    - itemTableView: TableView<Item>
    - isCompletedColumn: TableColumn<Item, CheckBox>
    - descriptionColumn: TableColumn<Item, String>
    - dueDateColumn: TableColumn<Item, LocalDate>

    - descriptionTextField: TextField
    - dueDatePicker: DatePicker

    - itemObservableList: ObservableList<Item>
    - filterComboBox: ComboBox <String>
    - serItemList: List<SerItem>

    - primaryStage: Stage
    - selectedFile: File

    + addItemButtonClicked(ActionEvent)
    + deleteItemsButtonClicked(ActionEvent)
    + viewFilterComboBox()
    + editDescription()
    + clearListClicked(ActionEvent)
    + refreshButtonClicked(ActionEvent)
    + saveOptionClicked()
    + saveAsOptionClicked()
    + openOptionClicked()
    + initialize()
    + setPrimaryStage(Stage)
    + editDueDateView()
    - displayItems(FilteredList<Item>)
    - initTable()
    - editColumns()
}

class ToDoListFunctions{
    + viewCompletedOnlyClicked(ObservableList<Item>): FilteredList<Item>
    + viewUncompletedOnlyButtonClicked(ObservableList<Item>): FilteredList<Item>
    + addItem(String, LocalDate, ObservableList<Item>): ObservableList<Item>
    + addItem(String, String, boolean, List<SerItem>): List<SerItem>
    + deleteItems(Item, ObservableList<Item>): ObservableList<Item>
    + deleteItems(SerItem, List<SerItem>): List<SerItem>
    + clearList(ObservableList<Item>)
    + clearList(List<SerItem>)
    + viewAll(List<SerItem>): List<SerItem>
    + filteredView(List<SerItem>): List<SerItem>
}

class DueDateViewController{
    - selectedItem: Item
    - dueDateStage: Stage

    - newDueDatePicker: DatePicker

    + saveChangesButtonClicked(ActionEvent)
    + saveChanges(LocalDate)
    + setDueDateStage(Stage)
    + initData(Item)
}

class SerItem{
    - serDescription: String
    - serDueDate: String
    - serIsCompleted:boolean

    + SerItem(String, String, boolean)
    + getSerDescription(): String
    + getSerDueDate(): String
    + getSerIsCompleted(): boolean
    + setSerDescription(String)
    + setIsCompleted(boolean)
    + setDueDate(String)
}

class Item{
    - isComplete: CheckBox
    - item: SimpleStringProperty
    - description: SimpleStringProperty
    - dueDate: LocalDate

    + Item(CheckBox, String, String, LocalDate)
    + isComplete(): CheckBox
    + setComplete(CheckBox)
    + getItem(): String
    + itemProperty(): SimpleStringProperty
    + setItem(String)
    + getDescription(): String
    + descriptionProperty(): SimpleStringProperty
    + setDescription(String)
    + getDueDate(): LocalDate
    + setDueDate(LocalDate)
}

class FileFunctions{
    - itemObservableList: ObservableList<Item>

    + setItemObservableList(ObservableList<Item>)
    + loadFromPrevious(File): List<SerItem>
    + saveFile(ArrayList<SerItem> allItems, File)
    + makeListDeserializable(List<SerItem>): ObservableList<Item>
    + saveAs(): File
    + openFile(): File
    - dateFormatter(String): LocalDate
    - observableListToArrayList(): ArrayList<Item>
    - makeListSerializable(ObservableList<Item>): ArrayList<SerItem>
    - makeItemSerializable(Item): SerItem
    - turnSerItemToItem(SerItem): Item
}


javafx.Application <|-- ToDoListApp
ToDoListApp -- ToDoListController
ToDoListController -- Item
DueDateViewController -- Item
ToDoListController -- SerItem
ToDoListController -- DueDateViewController
SerItem <|-- Item
ToDoListFunctions -- SerItem
ToDoListFunctions -- Item
ToDoListController -- ToDoListFunctions
FileFunctions - ToDoListController
FileFunctions - Item
FileFunctions -- SerItem

@enduml